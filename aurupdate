#!/bin/bash

#______________________________________________________________________#
#                                                                      #
#	# This script was made to update the AUR packages on           #
# my Arch Linux system. It assumes the AUR packages are all            #
# on the $HOME/AUR/ directory. It goes to that directory,              #
# git-pulls all repositories concurrently, and then, if there          #
# are updates, it builds their PKGBUILD and install them sequentially. #
#                                                                      #
#______________________________________________________________________#



# Function used to check if there are updates for a given package.
# Receives a target repository and checks if it is up to date.
# Stores the target's name into a FIFO file.
#___________________________________________________#
update() {                                          # the shell inside of a shell
	target=$1				    # may have changed it's directory,
	msg=$(cd $target; git pull)		    # but the current shell didn't, so
                                                    # there's no need to cd back to anywhere now.
                                                    #
                                                    #
	echo -e "${orange}$dir:${NC} $msg"          # uses color defined below
                                                    #
	if [ "$msg" == "Already up to date." ]	    #
	then					    #
		echo $target >> $updated &          #
	else					    #
		echo $target >> $outdated &         #
	fi                                          #
	return					    #
}                                                   #
#___________________________________________________#


#_________________________________#
#                                 #
#      1. Preparing...            #
#_________________________________#
                                  #
orange='\033[0;33m'               # colors to be used.
NC='\033[0m'                      #
                                  #
current=$(pwd)                    # way back.
                                  #
outdated=$HOME/.outdated          # FIFO files path
updated=$HOME/.updated            #
                                  #
[ -p  $outdated ] && rm $outdated # Removes FIFO files if exists
mkfifo $outdated                  # and then create new ones.
[ -p  $updated ]  && rm $updated  # We'll use the FIFO files to
mkfifo $updated                   # keep track of outdated packages.
                                  #
#_________________________________#

#_________________________________#
#                                 #
#     2. Concurrent Git-Pulls     #
#_________________________________#
cd $HOME/AUR/                     # let's roll
                                  #
pids=()                           #
for dir in $(ls)                  #
do                                #
	update $dir &	          # checks for updates concurrently
	pid+=($!)                 # stores the pid of the above subshell
done		                  #
                                  #
wait ${pids[@]}                   # waits for all pids to end
#_________________________________#

#_________________________________#
#		                  #
#     3. Updating packages        #
#_________________________________#
                                  #
up=$(cat $updated | wc -w)        # we use this to check if
total=$(ls | wc -w)               # $outdated is not empty.
                                  #
if [ $total -ne $up ]             # if not empty
then                              #
	out=$(cat $outdated)      #
	for dir in $out           # for each outdated directory,
	do                        #
		echo ""           #
		echo ""           #
		echo -e "updating ${orange}$dir${NC}"
		echo ""
		cd "$dir"         #
		makepkg -sirc     # builds the AUR package
		cd ..             #
	done                      #
fi                                #
#_________________________________#


#  The End:
#____________#
             #
rm $outdated # removes the fifo files
rm $updated  #
cd $current  # go back
#____________#
